---

- name: WOWZA | WSE files and directories permissions hardening  # noqa no-changed-when 301
  shell:
    cmd: 'set -eo pipefail && find /usr/local/WowzaStreamingEngine/ \( -type d -o -type f \) -print0 | xargs -0 chmod o-w'
    executable: '/bin/bash'

- name: WOWZA | Set read-only permissions for uninstall files
  file:
    path: "{{ item }}"
    state: file
    mode: '0400'
    owner: root
    group: root
  loop: "{{ wowza_uninstall_files }}"

- name: WOWZA | Fix sensitive config files permissions
  file:
    name: "{{ item }}"
    state: file
    mode: "0640"
    owner: root
    group: root
  loop: "{{ wowza_config_secret_files }}"

- name: WOWZA | Fix WSE config directory permissions
  file:
    name: "{{ wowza_config_directory }}"
    state: directory
    mode: "0750"
    owner: root
    group: root

- name: WOWZA | Create wowza logs directory
  file:
    name: "{{ wowza_log_directory }}"
    state: directory
    mode: "0755"
    owner: root
    group: root

- name: WOWZA | Change default WSE logs path and add XFF field to logs  # noqa var-spacing
  replace:
    path: "{{ wowza_config_log }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
    backup: false
  loop:
    - regexp: '\${(?:sys:)?com\.wowza\.wms\.ConfigHome}/logs'
      replace: "{{ wowza_log_directory }}"
    - regexp: '(?<!x-forwarded-ip),c-ip,'
      replace: ",x-forwarded-ip,c-ip,"
    - regexp: '(?<!x-forwarded-ip)\\tc-ip\\t'
      replace: '\\tx-forwarded-ip\\tc-ip\\t'
    - regexp: '(?<!%replace{\%X{x-forwarded-ip}}{\^\$}{-})\\t%replace{\%X{c-ip}}{\^\$}{-}\\t'
      replace: !unsafe '\\t%replace{%X{x-forwarded-ip}}{^$}{-}\\t%replace{%X{c-ip}}{^$}{-}\\t'
  notify: 'WOWZA | restart WSE'

- name: WOWZA | Change default WSE Manager logs path
  replace:
    path: "{{ item }}"
    regexp: '\${(?:sys:)?com\.wowza\.wms\.ConfigHome}/logs'
    replace: "{{ wowza_log_directory }}"
    backup: false
  loop:
    - '{{ wowza_manager_config_log }}'
    - '{{ wowza_manager_config_servlet_log4j }}'
  notify: 'WOWZA | restart WSE Manager'

- name: WOWZA | Disable output header from error log
  ansible.builtin.replace:
    path: "{{ wowza_config_log }}"
    regexp: '^log4j\\.appender\\.serverError\\.layout\\.OutputHeader=true'
    replace: 'log4j.appender.serverError.layout.OutputHeader=false'
  when: not wowza_enable_error_log_header and wowza_version is version('4.8.6', '<')
  notify: 'WOWZA | restart WSE'

- name: WOWZA | Enable output header from error log
  ansible.builtin.replace:
    path: "{{ wowza_config_log }}"
    regexp: '^log4j\\.appender\\.serverError\\.layout\\.OutputHeader=false'
    replace: 'log4j.appender.serverError.layout.OutputHeader=true'
  when: wowza_enable_error_log_header and wowza_version is version('4.8.6', '<')
  notify: 'WOWZA | restart WSE'

- name: WOWZA | Disable output header from access log
  ansible.builtin.replace:
    path: "{{ wowza_config_log }}"
    regexp: '^log4j\.appender\.serverAccess\.layout\.OutputHeader=true'
    replace: 'log4j.appender.serverAccess.layout.OutputHeader=false'
  when: not wowza_enable_access_log_header and wowza_version is version('4.8.6', '<')
  notify: 'WOWZA | restart WSE'

- name: WOWZA | Enable output header from access log
  ansible.builtin.replace:
    path: "{{ wowza_config_log }}"
    regexp: '^log4j\.appender\.serverAccess\.layout\.OutputHeader=false'
    replace: 'log4j.appender.serverAccess.layout.OutputHeader=true'
  when: wowza_enable_access_log_header and wowza_version is version('4.8.6', '<')
  notify: 'WOWZA | restart WSE'

- name: WOWZA | Fix windows CR EOL in WSE configs
  replace:
    dest: "{{ item }}"
    regexp: "\r"
    backup: false
  loop: "{{ wowza_config_files }}"

- name: WOWZA | Configure WSE java heap size (tuning)  # noqa no-tabs
  lineinfile:
    path: "{{ wowza_config_tune }}"
    regexp: '^.*<HeapSize>.*</HeapSize>'
    line: "\t\t<HeapSize>{{ wowza_java_heapsize }}</HeapSize>"
    insertbefore: "^.*</Tune>"
    state: present
    backup: false
  vars:
    wowza_java_heapsize: "{% if wowza_tuning_heapsize in ['Production', 'Development'] -%}
                          ${com.wowza.wms.TuningHeapSize{{ wowza_tuning_heapsize }}}
                          {%- elif wowza_tuning_heapsize | regex_search('^\\d+M$') %}{{ wowza_tuning_heapsize }}{% endif %}"
  notify: 'WOWZA | restart WSE'
  when:
    - wowza_tuning_heapsize is defined
    - wowza_java_heapsize is defined and wowza_java_heapsize | length > 0

- name: WOWZA | Create Server.xml config
  template:
    src: Server.xml.j2
    dest: "{{ wowza_config_server }}"
    mode: '0644'
    owner: root
    group: root
  notify: 'WOWZA | restart WSE'
  when:
    - wowza_rest_enable is defined and wowza_rest_enable != none
    - wowza_rest_docs_enable is defined
    - wowza_jmx_enable is defined

- name: WOWZA | Create VHost.xml config
  template:
    src: VHost.xml.j2
    dest: "{{ wowza_config_vhost }}"
    mode: '0644'
    owner: root
    group: root
  notify: 'WOWZA | restart WSE'

- name: WOWZA | Create admin.password config
  template:
    src: admin.password.j2
    dest: "{{ wowza_config_admin_password }}"
    mode: '0640'
    owner: root
    group: root

- name: WOWZA | Add Wowza Modules
  unarchive:
    src: "{{ wowza_modules_collection_url + '/' + lookup('vars', wowza_module) }}"
    dest: "{{ wowza_directory }}"
    exclude:
      - lib/
      - LICENSE.txt
      - version.txt
    remote_src: true
    mode: '0644'
    owner: root
    group: root
  loop:
    - wowza_modules_streampublisher
    - wowza_modules_dvrrecordercontrol
    - wowza_modules_packetizercontrol
    - wowza_modules_transcodercontrol
  loop_control:
    loop_var: wowza_module
  notify: 'WOWZA | restart WSE'
  when:
    - lookup('vars', wowza_module + '_enable') is defined
    - lookup('vars', wowza_module + '_enable') | bool

- name: WOWZA | Check OS init system
  setup:
    filter: "ansible_service_mgr"
  when: ansible_facts['service_mgr'] is not defined

- name: WOWZA | Create directory for systemd drop-in files
  file:
    name: "{{ wowza_systemd_include_dir }}"
    owner: root
    group: root
    mode: "0755"
    state: directory
  when: ansible_facts['service_mgr'] == 'systemd'

- name: WOWZA | Add WSE systemd drop-in file
  copy:
    dest: "{{ wowza_systemd_include_dir }}/99.override.conf"
    owner: root
    group: root
    mode: "0644"
    content: |
      # Ansible managed file
      [Service]
      LimitNOFILE=65536
  notify:
    - 'WOWZA | reload systemd'
    - 'WOWZA | restart WSE'
  when: ansible_facts['service_mgr'] == 'systemd'

- name: WOWZA | Fix WSE systemd service files permissions
  file:
    name: "{{ item }}"
    state: file
    mode: "0644"
    owner: root
    group: root
  loop: "{{ wowza_systemd_service_files }}"
  when: ansible_facts['service_mgr'] == 'systemd'

- name: WOWZA | Check latest Log4j2 jar version
  stat:
    path: "{{ wowza_lib_directory }}/log4j-core-{{ wowza_log4j2_version }}.jar"
    get_checksum: false
  register: wowza_log4j2_jar

- name: WOWZA | Log4j2 security update (CVE-2021-44228, CVE-2021-45046, CVE-2021-45105, CVE-2021-48832)
  block:

    - name: WOWZA | Create Log4j2 updater directory
      file:
        path: "{{ wowza_updatelog4j2_directory }}"
        owner: root
        group: root
        mode: "0755"
        state: directory

    - name: WOWZA | Get Log4j2 updater archive
      unarchive:
        src: "{{ wowza_updatelog4j2_url }}"
        dest: "{{ wowza_updatelog4j2_directory }}"
        exclude:
          - updatelog4j.bat
          - "osx/*"
          - "windows/*"
        remote_src: true
        owner: root
        group: root

    - name: WOWZA | Ensure zip and unzip packages installed
      package:
        name: "{{ wowza_zip_packages }}"
        state: present
      vars:
        wowza_zip_packages:
          - zip
          - unzip

    - name: WOWZA | Ensure Wowza services not running
      service:
        name: "{{ item }}"
        state: stopped
      loop:
        - "WowzaStreamingEngine"
        - "WowzaStreamingEngineManager"

    - name: WOWZA | Run Log4j2 updater script
      command:
        chdir: "{{ wowza_updatelog4j2_directory }}"
        cmd: './updatelog4j.sh'
      notify:
        - 'WOWZA | restart WSE'
        - 'WOWZA | restart WSE Manager'

    - name: WOWZA | Remove Log4j2 updater directory and files
      file:
        path: "{{ wowza_updatelog4j2_directory }}"
        state: absent

  when:
    - wowza_version is version('4.8.6', '>=')
    - not wowza_log4j2_jar.stat.exists | bool
